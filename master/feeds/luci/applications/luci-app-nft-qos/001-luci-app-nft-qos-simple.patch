diff --git a/luasrc/controller/nft-qos.lua b/luasrc/controller/nft-qos.lua
index 899e41a..6351634 100644
--- a/luasrc/controller/nft-qos.lua
+++ b/luasrc/controller/nft-qos.lua
@@ -18,7 +18,7 @@ function index()
 	e.leaf = true
 	e.acl_depends = { "luci-app-nft-qos" }
 
-	e = entry({"admin", "services", "nft-qos"}, cbi("nft-qos/nft-qos"), _("QoS over Nftables"), 60)
+	e = entry({"admin", "network", "nft-qos"}, cbi("nft-qos/nft-qos"), _("QoS over Nftables"), 60)
 	e.leaf = true
 	e.acl_depends = { "luci-app-nft-qos" }
 end
diff --git a/luasrc/model/cbi/nft-qos/nft-qos.lua b/luasrc/model/cbi/nft-qos/nft-qos.lua
index b089433..844a28a 100644
--- a/luasrc/model/cbi/nft-qos/nft-qos.lua
+++ b/luasrc/model/cbi/nft-qos/nft-qos.lua
@@ -30,41 +30,39 @@ s = m:section(TypedSection, "default", translate("NFT-QoS Settings"))
 s.addremove = false
 s.anonymous = true
 
-s:tab("limit", "Limit Rate by IP Address")
-s:tab("limitmac", "Limit Rate by Mac Address")
-s:tab("priority", "Traffic Priority")
+s:tab("limitopt", translate("Limit Rate Options"))
 
 --
 -- Static
 --
-o = s:taboption("limit", Flag, "limit_enable", translate("Limit Enable"), translate("Enable Limit Rate Feature"))
-o.default = limit_enable or o.enabled
+o = s:taboption("limitopt", Flag, "limit_enable", translate("Limit Rate by IP Address"), translate("Enable Limit Rate Feature"))
+o.default = limit_enable or o.disabled
 o.rmempty = false
 
-o = s:taboption("limit", ListValue, "limit_type", translate("Limit Type"), translate("Type of Limit Rate"))
+o = s:taboption("limitopt", ListValue, "limit_type", translate("Limit Type"), translate("Type of Limit Rate"))
 o.default = limit_static or "static"
 o:depends("limit_enable","1")
 o:value("static", "Static")
 o:value("dynamic", "Dynamic")
 
-o = s:taboption("limit", Value, "static_rate_dl", translate("Default Download Rate"), translate("Default value for download rate"))
+o = s:taboption("limitopt", Value, "static_rate_dl", translate("Default Download Rate"), translate("Default value for download rate"))
 o.datatype = "uinteger"
 o.default = def_rate_dl or '50'
 o:depends("limit_type","static")
 
-o = s:taboption("limit", ListValue, "static_unit_dl", translate("Default Download Unit"), translate("Default unit for download rate"))
+o = s:taboption("limitopt", ListValue, "static_unit_dl", translate("Default Download Unit"), translate("Default unit for download rate"))
 o.default = def_unit_dl or "kbytes"
 o:depends("limit_type","static")
 o:value("bytes", "Bytes/s")
 o:value("kbytes", "KBytes/s")
 o:value("mbytes", "MBytes/s")
 
-o = s:taboption("limit", Value, "static_rate_ul", translate("Default Upload Rate"), translate("Default value for upload rate"))
+o = s:taboption("limitopt", Value, "static_rate_ul", translate("Default Upload Rate"), translate("Default value for upload rate"))
 o.datatype = "uinteger"
 o.default = def_rate_ul or '50'
 o:depends("limit_type","static")
 
-o = s:taboption("limit", ListValue, "static_unit_ul", translate("Default Upload Unit"), translate("Default unit for upload rate"))
+o = s:taboption("limitopt", ListValue, "static_unit_ul", translate("Default Upload Unit"), translate("Default unit for upload rate"))
 o.default = def_unit_ul or "kbytes"
 o:depends("limit_type","static")
 o:value("bytes", "Bytes/s")
@@ -74,54 +72,52 @@ o:value("mbytes", "MBytes/s")
 --
 -- Dynamic
 --
-o = s:taboption("limit", Value, "dynamic_bw_down", translate("Download Bandwidth (Mbps)"), translate("Default value for download bandwidth"))
+o = s:taboption("limitopt", Value, "dynamic_bw_down", translate("Download Bandwidth (Mbps)"), translate("Default value for download bandwidth"))
 o.default = def_up or '100'
 o.datatype = "uinteger"
 o:depends("limit_type","dynamic")
 
-o = s:taboption("limit", Value, "dynamic_bw_up", translate("Upload Bandwidth (Mbps)"), translate("Default value for upload bandwidth"))
+o = s:taboption("limitopt", Value, "dynamic_bw_up", translate("Upload Bandwidth (Mbps)"), translate("Default value for upload bandwidth"))
 o.default = def_down or '100'
 o.datatype = "uinteger"
 o:depends("limit_type","dynamic")
 
-o = s:taboption("limit", Value, "dynamic_cidr", translate("Target Network (IPv4/MASK)"), translate("Network to be applied, e.g. 192.168.1.0/24, 10.2.0.0/16, etc."))
+o = s:taboption("limitopt", Value, "dynamic_cidr", translate("Target Network (IPv4/MASK)"), translate("Network to be applied, e.g. 192.168.1.0/24, 10.2.0.0/16, etc."))
 o.datatype = "cidr4"
 ipc.routes({ family = 4, type = 1 }, function(rt) o.default = rt.dest end)
 o:depends("limit_type","dynamic")
 
 if has_ipv6 then
-	o = s:taboption("limit", Value, "dynamic_cidr6", translate("Target Network6 (IPv6/MASK)"), translate("Network to be applied, e.g. AAAA::BBBB/64, CCCC::1/128, etc."))
+	o = s:taboption("limitopt", Value, "dynamic_cidr6", translate("Target Network6 (IPv6/MASK)"), translate("Network to be applied, e.g. AAAA::BBBB/64, CCCC::1/128, etc."))
 	o.datatype = "cidr6"
 	o:depends("limit_type","dynamic")
 end
 
-o = s:taboption("limit", DynamicList, "limit_whitelist", translate("White List for Limit Rate"))
+o = s:taboption("limitopt", DynamicList, "limit_whitelist", translate("White List for Limit Rate"))
 o.datatype = "ipaddr"
 o:depends("limit_enable","1")
 
 --
 -- limit speed by mac address
 --
-o = s:taboption("limitmac", Flag, "limit_mac_enable", translate("Limit Enable"), translate("Enable Limit Rate Feature"))
-o.default = limit_mac_enable or o.enabled
+o = s:taboption("limitopt", Flag, "limit_mac_enable", translate("Limit Rate by Mac Address"), translate("Enable Limit Rate Feature"))
+o.default = limit_mac_enable or o.disabled
 o.rmempty = false
 
 --
 -- Priority
 --
-o = s:taboption("priority", Flag, "priority_enable", translate("Enable Traffic Priority"), translate("Enable this feature"))
-o.default = enable_priority or o.enabled
+o = s:taboption("limitopt", Flag, "priority_enable", translate("Enable Traffic Priority"), translate("Enable this feature"))
+o.default = enable_priority or o.disabled
 o.rmempty = false
 
-o = s:taboption("priority", ListValue, "priority_netdev", translate("Default Network Interface"), translate("Network Interface for Traffic Shaping, e.g. br-lan, eth0.1, eth0, etc."))
+o = s:taboption("limitopt", ListValue, "priority_netdev", translate("Default Network Interface"), translate("Network Interface for Traffic Shaping, e.g. br-lan, eth0.1, eth0, etc."))
 o:depends("priority_enable", "1")
 wa.cbi_add_networks(o)
 
 --
 -- Static Limit Rate - Download Rate
 --
-if limit_enable == "1" and limit_type == "static" then
-
 	x = m:section(TypedSection, "download", translate("Static QoS-Download Rate"))
 	x.anonymous = true
 	x.addremove = true
@@ -189,19 +185,15 @@ if limit_enable == "1" and limit_type == "static" then
 	o:value("kbytes", "KBytes/s")
 	o:value("mbytes", "MBytes/s")
 
-end
-
 --
 -- Traffic Priority Settings
 --
-if enable_priority == "1" then
+	z = m:section(TypedSection, "priority", translate("Traffic Priority Settings"))
+	z.anonymous = true
+	z.addremove = true
+	z.template = "cbi/tblsection"
 
-	s = m:section(TypedSection, "priority", translate("Traffic Priority Settings"))
-	s.anonymous = true
-	s.addremove = true
-	s.template = "cbi/tblsection"
-
-	o = s:option(ListValue, "protocol", translate("Protocol"))
+	o = z:option(ListValue, "protocol", translate("Protocol"))
 	o.default = "tcp"
 	o:value("tcp", "TCP")
 	o:value("udp", "UDP")
@@ -209,7 +201,7 @@ if enable_priority == "1" then
 	o:value("sctp", "SCTP")
 	o:value("dccp", "DCCP")
 
-	o = s:option(ListValue, "priority", translate("Priority"))
+	o = z:option(ListValue, "priority", translate("Priority"))
 	o.default = "1"
 	o:value("-400", "1")
 	o:value("-300", "2")
@@ -223,19 +215,15 @@ if enable_priority == "1" then
 	o:value("225", "10")
 	o:value("300", "11")
 
-	o = s:option(Value, "service", translate("Service"), translate("e.g. https, 23, (separator is comma)"))
+	o = z:option(Value, "service", translate("Service"), translate("e.g. https, 23, (separator is comma)"))
 	o.default = '?'
 
-	o = s:option(Value, "comment", translate("Comment"))
+	o = z:option(Value, "comment", translate("Comment"))
 	o.default = '?'
 
-end
-
 --
 -- Static By Mac Address
 --
-if limit_mac_enable == "1" then
-
 	x = m:section(TypedSection, "client", translate("Limit Traffic Rate By Mac Address"))
 	x.anonymous = true
 	x.addremove = true
@@ -271,6 +259,4 @@ if limit_mac_enable == "1" then
 	o:value("kbytes", "KBytes/s")
 	o:value("mbytes", "MBytes/s")
 
-end
-
-return m
\ No newline at end of file
+return m
diff --git a/po/zh_Hans/nft-qos.po b/po/zh_Hans/nft-qos.po
index b422238..0997e56 100644
--- a/po/zh_Hans/nft-qos.po
+++ b/po/zh_Hans/nft-qos.po
@@ -128,7 +128,7 @@ msgstr "限速开启"
 
 #: applications/luci-app-nft-qos/luasrc/model/cbi/nft-qos/nft-qos.lua:239
 msgid "Limit Traffic Rate By Mac Address"
-msgstr "按 Mac 地址限制通信量速率"
+msgstr "根据MAC流控"
 
 #: applications/luci-app-nft-qos/luasrc/model/cbi/nft-qos/nft-qos.lua:44
 msgid "Limit Type"
@@ -182,7 +182,7 @@ msgstr "协议"
 #: applications/luci-app-nft-qos/luasrc/controller/nft-qos.lua:21
 #: applications/luci-app-nft-qos/luasrc/model/cbi/nft-qos/nft-qos.lua:24
 msgid "QoS over Nftables"
-msgstr "QoS Nftables 版"
+msgstr "流量控制"
 
 #: applications/luci-app-nft-qos/luasrc/controller/nft-qos.lua:13
 #: applications/luci-app-nft-qos/luasrc/model/cbi/nft-qos/nft-qos.lua:144
@@ -261,3 +261,12 @@ msgstr "例如https, 23（用逗号分隔）"
 #: applications/luci-app-nft-qos/luasrc/view/nft-qos/rate.htm:44
 msgid "kB"
 msgstr "kB"
+
+msgid "Limit Rate by IP Address"
+msgstr "开启IP流控"
+
+msgid "Limit Rate by Mac Address"
+msgstr "开启MAC流控"
+
+msgid "Limit Rate Options"
+msgstr "流控选项"
